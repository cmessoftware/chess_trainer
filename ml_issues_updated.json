[
  {
    "number": 78,
    "title": "ML Pipeline: Implement reliable chess move prediction with MLflow tracking",
    "priority": "high-priority",
    "status": "completed",
    "completion_percentage": 100,
    "url": "https://github.com/cmessoftware/chess_trainer/issues/78",
    "description": "Complete implementation of reliable chess move error prediction using MLflow for experiment tracking and PostgreSQL for model persistence",
    "dependencies": [75, 76],
    "completed_features": [
      "ChessErrorPredictor class with Random Forest optimization",
      "Real-time prediction system with Stockfish validation", 
      "MLflow integration with PostgreSQL backend",
      "PowerShell commands: mlinit, mltrain, mlpredict, mltest",
      "Comprehensive documentation and usage guide",
      "Feature engineering with 16+ move characteristics"
    ],
    "technical_specs": {
      "model_type": "Random Forest with GridSearch optimization",
      "accuracy_target": "85-90%",
      "prediction_classes": ["good", "inaccuracy", "mistake", "blunder"],
      "features_count": 16,
      "tracking_system": "MLflow with PostgreSQL",
      "validation_method": "Cross-validation + Stockfish comparison"
    }
  },
  {
    "number": 23,
    "title": "SHAP Integration: Implement explainable AI for chess predictions",
    "priority": "medium-priority",
    "status": "pending",
    "completion_percentage": 0,
    "url": "https://github.com/cmessoftware/chess_trainer/issues/23",
    "description": "Add SHAP (SHapley Additive exPlanations) to explain chess move predictions and provide interpretable AI insights",
    "dependencies": [78],
    "planned_features": [
      "SHAP explainer integration with trained models",
      "Feature importance visualization per prediction",
      "Individual move explanation interface",
      "Global feature importance dashboard",
      "Integration with MLflow for explainability tracking"
    ],
    "references": ["Implementación SHAP en Chess para descripcion de predicciones ML"]
  },
  {
    "number": 21, 
    "title": "ELO Standardization: Implement standardized_elo field across all datasets",
    "priority": "low-priority", 
    "status": "in-progress",
    "completion_percentage": 85,
    "url": "https://github.com/cmessoftware/chess_trainer/issues/21",
    "description": "Standardize ELO ratings across different sources (Chess.com, Lichess, FIDE) for consistent player strength analysis",
    "dependencies": [76],
    "progress": [
      "Base feature extraction implemented in features_generator.py",
      "Integration points identified in chess_error_predictor.py",
      "Stockfish analysis enhanced for mate detection",
      "Tactical preprocessing test script created (test_tactical_preprocessing.py)",
      "MLflow integration test validated with tactical features",
      "PowerShell shortcuts updated to include tactical testing"
    ],
    "remaining_work": [
      "Research ELO conversion formulas between platforms",
      "Implement standardization algorithms",
      "Update data pipeline to apply standardization",
      "Validate standardized ratings against known benchmarks"
    ],
    "references": ["Aplicar estandarización de elo (campo standarized_elo)"]
  }
]

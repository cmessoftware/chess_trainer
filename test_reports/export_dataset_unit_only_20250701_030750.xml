<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="5" skipped="0" tests="28" time="2.037" timestamp="2025-07-01T03:07:51.025189+00:00" hostname="2ac8e48a9c34"><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_success" time="0.042" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_csv_format" time="0.011" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_with_filters" time="0.010" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_no_data" time="0.004" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_empty_dataframe" time="0.009" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_for_source" time="0.010" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_directory_creation" time="0.010" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_to_dataset_database_error" time="0.003" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_constants_configuration" time="0.000" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_with_special_characters" time="0.007" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_large_dataset" time="0.017" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_invalid_file_type" time="0.004" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDataset" name="test_export_features_path_validation" time="0.007" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDatasetEdgeCases" name="test_export_with_none_parameters" time="0.001" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDatasetEdgeCases" name="test_export_source_parameter_validation" time="0.004" /><testcase classname="tests.test_export_features_dataset.TestExportFeaturesDatasetEdgeCases" name="test_export_elo_filter_validation" time="0.006" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_source_only" time="0.005"><failure message="AssertionError: Expected 'DataFrame' to be called once. Called 2 times.&#10;Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{&quot;tactical&quot;: false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),&#10; call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{&quot;tactical&quot;: false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].">/usr/local/lib/python3.11/unittest/mock.py:950: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].

During handling of the above exception, another exception occurred:
test_features_repository_export.py:100: in test_get_features_with_filters_source_only
    mock_df.assert_called_once_with(sample_query_result, columns=sample_column_names)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].</failure></testcase><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_all_parameters" time="0.039"><failure message="AssertionError: Expected 'DataFrame' to have been called once. Called 2 times.&#10;Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),&#10; call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert ([(1, 1, 'whi...e2e4', ...)],) == ()&#10;  &#10;  Left contains one more item: #x1B[0m[(#x1B[94m1#x1B[39;49;00m, #x1B[94m1#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mwhite#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33me4#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33me2e4#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, ...)]#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (38 lines hidden), use '-vv' to show&#10;Kwargs:&#10;assert {'columns': [...ve_uci', ...]} == {}&#10;  &#10;  Left contains 1 more item:&#10;  #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcolumns#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: [#x1B[33m'#x1B[39;49;00m#x1B[33mgame_id#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m&#10;               #x1B[33m'#x1B[39;49;00m#x1B[33mmove_number#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m&#10;               #x1B[33m'#x1B[39;49;00m#x1B[33mplayer_color#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m&#10;               #x1B[33m'#x1B[39;49;00m#x1B[33mfen#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m&#10;               #x1B[33m'#x1B[39;49;00m#x1B[33mmove_san#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (70 lines hidden), use '-vv' to show">/usr/local/lib/python3.11/unittest/mock.py:918: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'DataFrame' to have been called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].

During handling of the above exception, another exception occurred:
test_features_repository_export.py:131: in test_get_features_with_filters_all_parameters
    mock_df.assert_called_once()
E   AssertionError: Expected 'DataFrame' to have been called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ([(1, 1, 'whi...e2e4', ...)],) == ()
E     
E     Left contains one more item: #x1B[0m[(#x1B[94m1#x1B[39;49;00m, #x1B[94m1#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mwhite#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mrnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33me4#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33me2e4#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, ...)]#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (38 lines hidden), use '-vv' to show
E   Kwargs:
E   assert {'columns': [...ve_uci', ...]} == {}
E     
E     Left contains 1 more item:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcolumns#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: [#x1B[33m'#x1B[39;49;00m#x1B[33mgame_id#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m
E                  #x1B[33m'#x1B[39;49;00m#x1B[33mmove_number#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m
E                  #x1B[33m'#x1B[39;49;00m#x1B[33mplayer_color#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m
E                  #x1B[33m'#x1B[39;49;00m#x1B[33mfen#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m
E                  #x1B[33m'#x1B[39;49;00m#x1B[33mmove_san#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m,#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (70 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_no_games_found" time="0.002" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_elo_range" time="0.003" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_player_search" time="0.003" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_opening_search" time="0.003" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_limit_application" time="0.003"><failure message="AssertionError: Expected 'DataFrame' to be called once. Called 2 times.&#10;Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{&quot;tactical&quot;: false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),&#10; call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{&quot;tactical&quot;: true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{&quot;tactical&quot;: false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].">/usr/local/lib/python3.11/unittest/mock.py:950: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].

During handling of the above exception, another exception occurred:
test_features_repository_export.py:259: in test_get_features_with_filters_limit_application
    mock_df.assert_called_once_with(sample_query_result, columns=sample_column_names)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([(1, 1, 'white', 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', 'e4', 'e2e4', 0, 32, 16, 20, 28, 15, 'opening', True, 1, False, False, False, False, '{"tactical": true}', 0.5, False, 40, 'inaccuracy', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense'), (1, 2, 'black', 'rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2', 'd5', 'd7d5', 0, 32, 16, 18, 25, 18, 'opening', True, 2, False, False, False, False, '{"tactical": false}', 0.0, False, 40, 'good', 'lichess.org', 'Rated Rapid game', '2025-01-01', 'Player1', 'Player2', 1500, 1450, '1-0', 'B01', 'Scandinavian Defense')], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].</failure></testcase><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_database_error" time="0.002" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_empty_dataframe" time="0.002"><failure message="AssertionError: Expected 'DataFrame' to be called once. Called 2 times.&#10;Calls: [call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),&#10; call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].">/usr/local/lib/python3.11/unittest/mock.py:950: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].

During handling of the above exception, another exception occurred:
test_features_repository_export.py:294: in test_get_features_with_filters_empty_dataframe
    mock_df.assert_called_once_with([], columns=sample_column_names)
E   AssertionError: Expected 'DataFrame' to be called once. Called 2 times.
E   Calls: [call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening']),
E    call([], columns=['game_id', 'move_number', 'player_color', 'fen', 'move_san', 'move_uci', 'material_balance', 'material_total', 'num_pieces', 'branching_factor', 'self_mobility', 'opponent_mobility', 'phase', 'has_castling_rights', 'move_number_global', 'is_repetition', 'is_low_mobility', 'is_center_controlled', 'is_pawn_endgame', 'tags', 'score_diff', 'is_stockfish_test', 'num_moves', 'error_label', 'site', 'event', 'date', 'white_player', 'black_player', 'white_elo', 'black_elo', 'result', 'eco', 'opening'])].</failure></testcase><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_column_selection" time="0.003" /><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_null_values" time="0.002"><failure message="TypeError: Index(...) must be called with a collection of some kind, &lt;Mock name='mock.execute().keys()' id='140284979637008'&gt; was passed">test_features_repository_export.py:344: in test_get_features_with_filters_null_values
    result = repo.get_features_with_filters(
../src/db/repository/features_repository.py:347: in get_features_with_filters
    df = pd.DataFrame(result.fetchall(), columns=result.keys())
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.11/site-packages/pandas/core/frame.py:850: in __init__
    columns = ensure_index(columns)
              ^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.11/site-packages/pandas/core/indexes/base.py:7677: in ensure_index
    return Index(index_like, copy=copy)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.11/site-packages/pandas/core/indexes/base.py:533: in __new__
    raise cls._raise_scalar_data_error(data)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/lib/python3.11/site-packages/pandas/core/indexes/base.py:5299: in _raise_scalar_data_error
    raise TypeError(
E   TypeError: Index(...) must be called with a collection of some kind, &lt;Mock name='mock.execute().keys()' id='140284979637008'&gt; was passed</failure></testcase><testcase classname="tests.test_features_repository_export.TestFeaturesRepositoryExport" name="test_get_features_with_filters_special_characters" time="0.003" /></testsuite></testsuites>
# Comandos espec√≠ficos para MLflow integrado con PostgreSQL
# Este script debe ser incluido desde PowerShell-Helpers.ps1

function Initialize-MLflow {
    """Inicializa MLflow con PostgreSQL"""
    Write-Host "üîÑ Inicializando MLflow con PostgreSQL..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo actualizado
    docker-compose cp "src/" mlflow:/mlflow/src/
    
    # Verificar la configuraci√≥n de la base de datos
    docker-compose exec mlflow python /mlflow/src/ml/init_mlflow_db.py
    
    # Abrir la UI de MLflow
    Open-MLflowUI
    
    Write-Host "‚úÖ MLflow inicializado correctamente" -ForegroundColor Green
}

function Start-MLflowWithPostgres {
    """Inicia el servidor MLflow con PostgreSQL"""
    Write-Host "üöÄ Iniciando MLflow con PostgreSQL..." -ForegroundColor Blue
    
    # Detenemos el servicio si est√° corriendo
    docker-compose stop mlflow
    
    # Iniciamos MLflow con la configuraci√≥n actualizada
    docker-compose up -d mlflow
    
    # Esperamos a que el servicio est√© disponible
    Start-Sleep -Seconds 5
    
    # Verificamos si est√° corriendo
    $status = docker-compose ps mlflow | Select-String "Up"
    if ($status) {
        Write-Host "‚úÖ MLflow est√° corriendo con PostgreSQL" -ForegroundColor Green
        return $true
    }
    else {
        Write-Host "‚ùå Error iniciando MLflow" -ForegroundColor Red
        return $false
    }
}

function Open-MLflowUI {
    """Abre la UI de MLflow en el navegador"""
    Write-Host "üåê Abriendo UI de MLflow..." -ForegroundColor Blue
    Start-Process "http://localhost:5000"
}

function Run-MLExperiment {
    param (
        [string]$ExperimentName = "chess_error_prediction",
        [string]$ModelType = "RandomForest"
    )
    
    """Ejecuta un experimento de ML con MLflow"""
    Write-Host "üß™ Ejecutando experimento $ExperimentName con $ModelType..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo
    docker-compose cp "src/" notebooks:/notebooks/src/
    
    # Ejecutar experimento
    docker-compose exec -e EXPERIMENT_NAME=$ExperimentName -e MODEL_TYPE=$ModelType notebooks python /notebooks/src/ml/train_error_model.py
    
    Write-Host "‚úÖ Experimento completado" -ForegroundColor Green
    
    # Abrir la UI de MLflow para ver resultados
    Open-MLflowUI
}

function Cleanup-MLflowSQLite {
    """Verifica y elimina el archivo SQLite de MLflow si la migraci√≥n a PostgreSQL est√° completa"""
    Write-Host "üßπ Verificando y limpiando archivo SQLite de MLflow..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo actualizado
    docker-compose cp "src/" mlflow:/mlflow/src/
    
    # Ejecutar script de limpieza
    docker-compose exec mlflow python /mlflow/src/ml/cleanup_mlflow_sqlite.py
    
    Write-Host "‚úÖ Verificaci√≥n y limpieza completada" -ForegroundColor Green
}

function Train-ChessErrorModel {
    """Entrena el modelo de predicci√≥n de errores usando MLflow"""
    Write-Host "üéØ Entrenando modelo de predicci√≥n de errores..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo actualizado
    docker-compose cp "src/" mlflow:/mlflow/src/
    
    # Ejecutar entrenamiento
    docker-compose exec mlflow python /mlflow/src/ml/chess_error_predictor.py
    
    Write-Host "‚úÖ Entrenamiento completado. Revisa MLflow UI para ver m√©tricas" -ForegroundColor Green
    Open-MLflowUI
}

function Test-ChessPrediction {
    param (
        [string]$FEN = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
        [string]$Move = "e2e4"
    )
    
    """Prueba predicci√≥n en tiempo real"""
    Write-Host "üîÆ Probando predicci√≥n para jugada $Move..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo
    docker-compose cp "src/" mlflow:/mlflow/src/
    
    # Ejecutar predicci√≥n
    docker-compose exec -e TEST_FEN="$FEN" -e TEST_MOVE="$Move" mlflow python /mlflow/src/ml/realtime_predictor.py
    
    Write-Host "‚úÖ Predicci√≥n completada" -ForegroundColor Green
}

function Analyze-ChessDatasets {
    """Ejecuta an√°lisis ML comparativo en todos los datasets reales (NO DESTRUCTIVO)"""
    Write-Host "üî¨ Iniciando an√°lisis ML de datasets reales..." -ForegroundColor Blue
    Write-Host "‚ö†Ô∏è MODO NO DESTRUCTIVO: Solo lectura de datos existentes" -ForegroundColor Yellow
    
    # Sincronizar c√≥digo actualizado
    docker-compose cp "src/ml/analyze_real_datasets.py" notebooks:/notebooks/
    
    # Asegurar que el contenedor de notebooks est√© corriendo
    Write-Host "üì¶ Iniciando contenedor de notebooks..." -ForegroundColor Blue
    docker-compose up -d notebooks
    
    # Esperar a que est√© disponible
    Start-Sleep -Seconds 3
    
    # Ejecutar an√°lisis
    Write-Host "üöÄ Ejecutando an√°lisis comparativo..." -ForegroundColor Blue
    docker-compose exec notebooks python /notebooks/analyze_real_datasets.py
    
    Write-Host "‚úÖ An√°lisis completado. Revisa los resultados en el log." -ForegroundColor Green
}

function Test-ELOStandardization {
    """Ejecuta pruebas de estandarizaci√≥n ELO (Issue #21)"""
    Write-Host "üìä Ejecutando pruebas de estandarizaci√≥n ELO..." -ForegroundColor Blue
    
    # Sincronizar c√≥digo actualizado
    docker-compose cp "tests/test_elo_standardization.py" notebooks:/notebooks/
    
    # Asegurar que el contenedor de notebooks est√© corriendo
    docker-compose up -d notebooks
    
    # Esperar a que est√© disponible
    Start-Sleep -Seconds 3
    
    # Ejecutar pruebas
    docker-compose exec notebooks python /notebooks/test_elo_standardization.py
    
    Write-Host "‚úÖ Pruebas de ELO completadas" -ForegroundColor Green
}

function Compare-PlayerLevels {
    """Compara patrones de error entre diferentes niveles de jugadores"""
    Write-Host "üéØ Comparando patrones de error por nivel de jugador..." -ForegroundColor Blue
    
    # Ejecutar an√°lisis de datasets
    Analyze-ChessDatasets
    
    Write-Host "üí° Revisa los resultados para comparar:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ Elite vs Novice: Precisi√≥n del modelo" -ForegroundColor White
    Write-Host "  ‚Ä¢ Personal vs FIDE: Distribuci√≥n de errores" -ForegroundColor White  
    Write-Host "  ‚Ä¢ Stockfish vs Humanos: Patrones t√°cticos" -ForegroundColor White
    
    Write-Host "‚úÖ Comparaci√≥n completada" -ForegroundColor Green
}
